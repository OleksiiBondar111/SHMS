version: 0.2

phases:
  install:
    commands:
      - echo Installing SDKMAN...
      - curl -s https://get.sdkman.io | bash
      - source $HOME/.sdkman/bin/sdkman-init.sh  # Initialize SDKMAN in the current shell
      - sdk install gradle  # Install Gradle using SDKMAN
      - gradle --version  # Verify the installation of Gradle
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - chmod +x SHMS/gradlew  # Make sure gradlew has execute permissions
      - ./SHMS/gradlew clean build -x test  # Run Gradle build
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest olexiybondar9685/shms-service
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
    files: imagedefinitions.json