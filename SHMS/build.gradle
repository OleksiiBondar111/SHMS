plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id "org.sonarqube" version "5.1.0.4882"
}

group = 'com.shms.api'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

compileJava {
    options.compilerArgs = [
            '-Amapstruct.defaultComponentModel=spring'
    ]
}

sonar {
  properties {
    property "sonar.projectKey", "OleksiiBondar111_SHMS"
    property "sonar.organization", "oleksiibondar111"
    property "sonar.host.url", "https://sonarcloud.io"
  }
}


repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.3")
    javaLanguageLevel = '17'
}

dependencies {
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'com.vladmihalcea:hibernate-types-60:2.21.1'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    implementation 'org.mapstruct:mapstruct:1.6.2'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.2'

    implementation 'org.projectlombok:lombok-mapstruct-binding:0.1.0'


    runtimeOnly 'org.postgresql:postgresql'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.mockito:mockito-core:5.3.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
